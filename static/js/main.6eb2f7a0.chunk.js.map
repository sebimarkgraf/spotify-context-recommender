{"version":3,"sources":["configs/config.ts","Components/Footer.tsx","inference/time-buffer.ts","inference/inference.ts","spotify/PlaylistPanel.tsx","spotify/spotify-recommend.ts","spotify/SpotifyPanel.tsx","util.ts","configs/theme.ts","Components/RecordingControls.tsx","Components/TopBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InferenceConfig","SpotifyConfig","clientId","clientSecret","externalLinks","Footer","Container","maxWidth","Typography","variant","color","role","Date","getFullYear","Button","startIcon","onClick","window","open","TimeBuffer","timeWindow","callback","values","timer","this","flush","bind","setInterval","key","value","push","Object","keys","length","now","Model","model_location","session","console","log","InferenceSession","create","executionProviders","logVerbosityLevel","logSeverityLevel","then","catch","err","error","timestamp","Float32Array","from","features","entries","Tensor","Math","min","max","mean","reduce","a","b","sqrt","getHours","warn","run","undefined","prediction","index","data","label","_instance","useStyles","makeStyles","theme","item","cursor","height","width","margin","spacing","img","objectFit","imageList","justifyContent","PlaylistItem","props","classes","playlist","ImageListItem","cols","className","external_urls","spotify","src","images","url","alt","name","ImageListItemBar","title","subtitle","description","PlaylistPanel","playlists","map","id","ImageList","SpotifyWebApi","_addMethods","SpotifyWebApiServer","SpotifyRecommender","spotifyApi","getPlaylists","activity","searchPlaylists","clientCredentialsGrant","body","setAccessToken","instance","box","display","flexDirection","marginTop","alignItems","button","EmptyPanel","SpotifyPanel","recommender","getInstance","useState","setPlaylists","Box","aria-label","items","onPlaylistClick","requestIOSPermissions","DeviceMotionEvent","requestPermission","DeviceOrientationEvent","createTheme","palette","type","primary","light","main","dark","contrastText","secondary","events","marginRight","RecordingControls","recording","onRecordingChange","recordedEvents","FormControlLabel","control","Switch","size","checked","onChange","grow","flexGrow","TopBar","matches","useMediaQuery","breakpoints","up","AppBar","position","Toolbar","component","state","changeTo","startRecording","stopRecording","App","event_listener","timebuffer","model","inferenceCallback","calculate_features","infer","outputs","setState","record","eventtype","fields","tags","eventtime","performance","timing","navigationStart","listener","event","removeEventListener","function","addEventListener","devicemotion_listener","deviceorientation_listener","evt","timeStamp","accelerationIncludingGravity","x","y","z","rotationRate","alpha","beta","gamma","ThemeProvider","CssBaseline","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6eb2f7a0.chunk.js","sourcesContent":["export const Labels = [\n    { name: \"Testing\", value: \"testing\" },\n    { name: \"Studying\", value: \"studying\" },\n    { name: \"Talking\", value: \"talking\" },\n    { name: \"Jogging\", value: \"jogging\" },\n    { name: \"Driving\", value: \"driving\" },\n    { name: \"Sleeping\", value: \"sleeping\" }\n  ];\n  \n\nexport const InferenceConfig = {\n  \"model\": \"ks_context.onnx\"\n}\n\nexport const indexToLabel = (index: number) => {\n  // Apparently onnxruntime-web does currently not supported string tensors. Therefore, we cannot use the IndexToString COmponent in spark to directly convert the prediction back to a label\n  return ['studying', 'driving', 'standing', 'sleeping', 'jogging'][index]\n}\n\nexport const SpotifyConfig = {\n  clientId: \"cfd3ccbf529c4991b156b44819812436\",\n  clientSecret: '84336a1fc50b4d51af0e24a6e88dae85'\n}\n\nexport const externalLinks = {\n  \"repository\": \"https://github.com/sebimarkgraf/spotify-context-recommender\"\n}\n","import { Button, Container, Link, Typography } from \"@material-ui/core\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { externalLinks } from \"../configs/config\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"body1\" color=\"textSecondary\">\n        Created with <span role=\"img\">🔌</span> at home for Kontextsensitive\n        Systeme {new Date().getFullYear()}\n        </Typography>\n        <Button startIcon={<GitHubIcon />} onClick={() => window.open(externalLinks[\"repository\"])} >Repository</Button>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;\n","export interface ValueStore {\n    [key: string]: number[];\n}\n\nexport type InferenceCallback = (values: ValueStore, timestamp: number) => void;\n\nexport class TimeBuffer {\n    private values: ValueStore;\n    private timeWindow: number;\n    private callback: InferenceCallback;\n    timer: NodeJS.Timeout;\n\n    constructor(timeWindow: number, callback: InferenceCallback) {\n        this.timeWindow = timeWindow;\n        this.values = {};\n        this.callback = callback;\n        this.flush = this.flush.bind(this)\n        this.timer = setInterval(() => this.flush(), timeWindow);\n    }\n\n    push(key: string, value: number) {  \n        if (!this.values[key]) {\n            this.values[key] = [];\n        }\n        this.values[key].push(value);\n    }\n\n    flush() {\n        if (Object.keys(this.values).length === 0) return;\n        this.callback(this.values, Date.now());\n        this.values = {};\n    }\n}","import { Tensor, InferenceSession } from \"onnxruntime-web\";\nimport { indexToLabel, InferenceConfig } from \"../configs/config\";\nimport { ValueStore } from \"./time-buffer\";\n\n\n\nexport interface Features {\n    [key: string]: Tensor;\n}\n\nexport class Model {\n  session: InferenceSession | undefined;\n  static _instance: Model;\n\n  constructor(model_location: string) {\n    console.log(\"Loading Model: \" + model_location);\n    InferenceSession.create(model_location, {executionProviders: ['wasm'], logVerbosityLevel: 4, logSeverityLevel: 0}).then(session => {\n      this.session = session;\n      console.log(session);\n    }).catch(err => {\n      console.error(\"Failed loading model\", err);\n    });\n  }\n\n  static getInstance() {\n    if (!Model._instance) {\n      Model._instance = new Model(InferenceConfig['model']);\n    }\n    return Model._instance;\n  }\n\n  calculate_features(values: ValueStore, timestamp: number) {\n\n    Float32Array.from([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\n    const features: Features = {};\n    for (const [key, value] of Object.entries(values)) {\n      features[`min_${key}`] = new Tensor(Float32Array.from([Math.min(...value)]), [1, 1]);\n      features[`max_${key}`] = new Tensor(Float32Array.from([Math.max(...value)]), [1, 1]);\n      let mean = value.reduce((a, b) => a + b, 0) / value.length\n      features[`avg_${key}`] = new Tensor(Float32Array.from([mean]), [1, 1]);\n      features[`sum_${key}`] = new Tensor(Float32Array.from([value.reduce((a, b) => a + b, 0)]), [1, 1]);\n      features[`var_samp_${key}`] = new Tensor(Float32Array.from([Math.sqrt(value.reduce((a, b) => a + b * b, 0) / value.length - mean * mean)]), [1, 1]);\n    }\n    features['hourOfDay'] = new Tensor(Float32Array.from([new Date(timestamp).getHours()]), [1, 1]);\n    return features;\n  }\n\n  async infer(features: Features) {\n    if (!this.session) {\n      console.warn(\"Model not initialized\");\n      return;\n    }\n    try {\n      const prediction: any = await this.session.run(features, {logVerbosityLevel: 4});\n      if (prediction === undefined) {\n        return;\n      }\n      const label = indexToLabel(prediction[\"prediction\"].data[0])\n      return label;\n    } catch (err) {\n      console.warn(\"Error when predicting \" + err)\n      return;\n    }\n    \n  }\n}\n\n","import { IconButton, ImageList, ImageListItem, ImageListItemBar, makeStyles } from \"@material-ui/core\";\n\nexport interface Playlist {\n    id: string;\n    name: string;\n    description: string;\n    images: any[];\n    tracks: any[];\n    owner: any;\n    uri: string;\n    href: string;\n    external_urls: {\n        spotify: string;\n    }\n}\n\n\nconst useStyles = makeStyles((theme: any) => ({\n    item: {\n        cursor: \"pointer\",\n        height: 150,\n        width: 150,\n        margin: theme.spacing(1)\n    },\n    img: {\n        objectFit: \"cover\"\n    },\n    imageList: {\n        height: \"100%\",\n        width: \"100%\",\n        justifyContent: \"center\"\n    }\n  }));\n\nexport const PlaylistItem = (props: {key: string, playlist: Playlist}) => {\n    const classes = useStyles();\n    const {key, playlist} = props;\n    return (\n        <ImageListItem cols={1} key={key} className={classes.item} onClick={() => window.open(playlist.external_urls.spotify)} >\n            <img src={playlist.images[0].url} alt={playlist.name} className={classes.img}/>\n            <ImageListItemBar\n              title={playlist.name}\n              subtitle={<span>{playlist.description}</span>}\n             />\n        </ImageListItem>\n    );\n}\n\nexport const PlaylistPanel = (props: {playlists: Playlist[], onPlaylistClick: (id: number) => void}) => {\n    const classes = useStyles();\n    const playlists = props.playlists.map(playlist => (\n        <PlaylistItem\n            key={playlist.id}\n            playlist={playlist}/>\n    ));         \n\n    return (\n        <ImageList className={classes.imageList} cols={2}>\n            {playlists}\n        </ImageList>\n    )\n}","import { SpotifyConfig } from '../configs/config';\nimport SpotifyWebApi from 'spotify-web-api-node';\n// @ts-ignore\nimport SpotifyWebApiServer from 'spotify-web-api-node/src/server-methods';\n\n(SpotifyWebApi as unknown as { _addMethods: (fncs: unknown) => void })._addMethods(SpotifyWebApiServer);\nexport class SpotifyRecommender {\n    spotifyApi: SpotifyWebApi;\n    static instance: SpotifyRecommender;\n  \n    private constructor() {\n        const spotifyApi = new SpotifyWebApi({\n            ...SpotifyConfig,\n          });\n\n        spotifyApi.clientCredentialsGrant().then(\n            (data) => {\n              console.log('The access token expires in ' + data.body['expires_in']);\n              console.log('The access token is ' + data.body['access_token']);\n          \n              // Save the access token so that it's used in future calls\n              this.spotifyApi.setAccessToken(data.body['access_token']);\n            },\n            (err) => {\n              console.log('Something went wrong when retrieving an access token', err);\n            }\n          );\n          this.spotifyApi = spotifyApi;\n    }\n\n    static getInstance() {\n        if (!SpotifyRecommender.instance) {\n            SpotifyRecommender.instance = new SpotifyRecommender();\n        }\n        return SpotifyRecommender.instance;\n    }\n\n    getPlaylists = async (activity: string): Promise<any> => {\n        const playlists = await this.spotifyApi.searchPlaylists(activity);\n        return playlists;\n    }\n\n}\n","import { Box, Button, Fab, makeStyles, Typography } from \"@material-ui/core\"\nimport { useState } from \"react\";\nimport { PlaylistPanel, Playlist } from \"./PlaylistPanel\"\nimport { SpotifyRecommender } from \"./spotify-recommend\";\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: theme.spacing(1),\n        alignItems: \"center\",\n    },\n    button: {\n    }\n}));\n\ninterface Props {\n    activity: string;\n}\n\nexport const EmptyPanel = () => {\n\n    return <div>Perform Activity and Search!</div>\n}\n\nexport const SpotifyPanel = (props: Props) => {\n    const classes = useStyles();\n    const onClick = (id: number) => console.log(id)\n    const recommender = SpotifyRecommender.getInstance();\n\n    const [playlists, setPlaylists] = useState<Playlist[]>([]);\n    const searchPlaylists = ()  => {\n        recommender.getPlaylists(props.activity).then(data => {\n            const playlists = data.body.playlists.items;\n            console.log(playlists);\n            setPlaylists(playlists);\n        });\n    }\n\n    return (<Box className={classes.box}>\n         <Button variant=\"contained\" className={classes.button} color=\"primary\" aria-label=\"search\" onClick={() => searchPlaylists()}>\n             Search Playlists\n        </Button>\n        {playlists.length === 0 ? <EmptyPanel /> : <PlaylistPanel playlists={playlists} onPlaylistClick={onClick}/>}\n    </Box>\n    )\n}","export function generateRandomString(length = 6) {\n    return Math.random().toString(20).substr(2, length);\n  }\n  \nexport async function requestIOSPermissions() {\n  if (typeof DeviceMotionEvent.requestPermission === \"function\") {\n    const granted = await DeviceMotionEvent.requestPermission();\n    if (granted !== \"granted\") {\n      console.error(\"Device Motion Permission not granted!\");\n      return false;\n    }\n  }\n\n  if (typeof DeviceOrientationEvent.requestPermission === \"function\") {\n    const granted = await DeviceOrientationEvent.requestPermission();\n    if (granted !== \"granted\") {\n      console.error(\"DeviceOrientation Permission not granted!\");\n      return false;\n    }\n  }\n  return true;\n}","import {createTheme} from '@material-ui/core';\n\nexport const theme = createTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        light: '#bef67a',\n        main: '#8bc34a',\n        dark: '#5a9216',\n        contrastText: '#000000',\n      },\n      secondary: {\n        light: '#484848',\n        main: '#212121',\n        dark: '#000000',\n        contrastText: '#ffffff',\n      }\n    }\n  });\n  ","import { FormControlLabel, makeStyles, Switch, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    events: {\n        marginRight: theme.spacing(1)\n    }\n}));\n\nexport interface Props {\n    recording: boolean;\n    onRecordingChange: (newValue: boolean) => void;\n    activity: string;\n    recordedEvents: number;\n}\n\nexport const RecordingControls = (props: Props) => {\n    const classes = useStyles();\n    const {activity, recording, onRecordingChange, recordedEvents} = props;\n    return (\n        <>\n    <FormControlLabel\n      control={\n        <Switch\n          size=\"small\"\n          checked={recording}\n          onChange={() => onRecordingChange(!recording)}\n        />\n      }\n      label=\"Recording\"\n    />\n    <Typography className={classes.events}>Recorded Events: {recordedEvents}</Typography>\n    <Typography>Current Activity: {activity}</Typography>\n    </> ) \n}","import { AppBar, makeStyles, Toolbar, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { RecordingControls } from \"./RecordingControls\";\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1,\n    }\n}));\n\ninterface Props {\n    state: {\n        recording: boolean;\n        recordedEvents: number;\n        activity: string;\n    };\n    startRecording: () => void;\n    stopRecording: () => void;\n}\n\n\nexport const TopBar = (props: Props) => {\n    const classes = useStyles();\n    const matches = useMediaQuery((theme: any) => theme.breakpoints.up('sm'));\n    return (<AppBar position=\"sticky\">\n        <Toolbar>\n        {matches ? <Typography variant=\"h4\" component=\"h1\">Spotify Recommender</Typography> : null}\n        <div className={classes.grow} />\n        <RecordingControls {...props.state} onRecordingChange={(changeTo) => {\n            if (changeTo) {\n              props.startRecording();\n            } else {\n              props.stopRecording();\n            }\n          }\n        }/>\n        </Toolbar>\n      </AppBar>)\n}","import \"./styles.css\";\nimport * as React from \"react\";\n\nimport {\n  CssBaseline,\n  Container,\n  ThemeProvider\n} from \"@material-ui/core\";\nimport Footer from \"./Components/Footer\";\n\n\nimport { Tags, EventRecorder, AppState } from \"./types\";\nimport { TimeBuffer, ValueStore } from \"./inference/time-buffer\";\nimport { Model } from \"./inference/inference\";\nimport { SpotifyPanel } from \"./spotify/SpotifyPanel\";\nimport { requestIOSPermissions } from \"./util\";\nimport { theme } from \"./configs/theme\";\nimport { TopBar } from \"./Components/TopBar\";\n\nexport default class App extends React.Component<{}, AppState> {\n  event_listener: EventRecorder[];\n  timebuffer: TimeBuffer;\n  model: Model | undefined = undefined;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      recording: false,\n      recordedEvents: 0,\n      activity: \"unknown\"\n    };\n    this.devicemotion_listener = this.devicemotion_listener.bind(this);\n    this.deviceorientation_listener = this.deviceorientation_listener.bind(\n      this\n    );\n    this.event_listener = [\n      { event: \"deviceorientation\", function: this.deviceorientation_listener },\n      { event: \"devicemotion\", function: this.devicemotion_listener }\n    ];\n    \n\n    this.timebuffer = new TimeBuffer(1000, this.inferenceCallback)\n  }\n\n\n  inferenceCallback = (values: ValueStore, timestamp: number) => {\n    if (this.model === undefined) return;\n    const features = this.model.calculate_features(values, timestamp);\n    this.model.infer(features).then(outputs => {\n      if (outputs !== undefined) {\n        this.setState({\"activity\": outputs});\n      }\n    });\n  }\n\n  record = (\n    eventtype: string,\n    fields: object,\n    tags: Tags,\n    eventtime: number\n  ) => {\n    let point: any = {};\n    for (const [key, value] of Object.entries(fields)) {      \n      this.timebuffer.push(`${key}_${eventtype}_`, value);\n    }\n\n    let timestamp = performance.timing.navigationStart * 1000000 + eventtime * 1000000;\n\n    this.setState({ recordedEvents: this.state.recordedEvents + 1 });\n    point[\"timestamp\"] = timestamp;\n\n  };\n\n\n  devicemotion_listener(evt: DeviceMotionEvent) {\n    const { timeStamp, type } = evt;\n    const { x, y, z } = evt.accelerationIncludingGravity!;\n    const { alpha, beta, gamma } = evt.rotationRate!;\n    this.record(\n      type,\n      { x, y, z, alpha, beta, gamma },\n      {},\n      timeStamp\n    );\n  }\n\n  deviceorientation_listener(evt: DeviceOrientationEvent) {\n    const { alpha, beta, gamma, type, timeStamp } = evt;\n    this.record(type, { alpha, beta, gamma }, {}, timeStamp);\n  }\n\n  stopRecording = () => {\n    for (const listener of this.event_listener) {\n      console.log(\"Stopping\", listener.event);\n      window.removeEventListener(listener.event, listener.function, true);\n    }\n\n    this.setState({ recording: false });\n  };\n\n  startRecording = async () => {\n    if (this.state.recording === true) return;\n\n    console.log(\"Loading Model\");\n    this.model = Model.getInstance();\n    console.log(\"Model loaded\")\n\n    // Handle iOS Permissions\n    if (!await requestIOSPermissions()) {\n      return;\n    }\n\n    for (const listener of this.event_listener) {\n      console.log(\"Start listener\", listener.event);\n      window.addEventListener(listener.event, listener.function, true);\n    }\n\n    this.setState({ recording: true });\n\n  };\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n      <CssBaseline>\n       \n\n      <div className={\"root\"}>\n        <TopBar state={this.state} startRecording={this.startRecording} stopRecording={this.stopRecording} />\n        <Container className=\"content\">\n          <SpotifyPanel activity={this.state.activity}/>\n        </Container>\n        <Footer />\n      </div>\n\n      </CssBaseline>\n\n      </ThemeProvider>\n    );\n  }\n}\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}